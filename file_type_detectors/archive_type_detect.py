import sys

archive_signatures = {
    b'\x1F\x8B\x08': 'GZIP (gz)',
    b'\x42\x5A\x68': 'BZIP2 (bz2)',
    b'\x50\x4B\x03\x04': 'ZIP (zip)',
    b'\x52\x61\x72\x21\x1A\x07\x00': 'RAR (rar)',
    b'\x75\x73\x74\x61\x72': 'TAR (tar)',
    b'\x37\x7A\xBC\xAF\x27\x1C': '7-Zip (7z)',
    b'\x78\x01': 'XZ (xz)',
    b'\xFD\x37\x7A\x58\x5A\x00': 'LZMA (lzma)',
    b'\x5D\x00': 'LZIP (lz)',
    b'\x28\xB5\x2F\xFD': 'CAB (cab)',
    b'\x50\x4B\x05\x06': 'ZIP (zip - Empty)',
    b'\x37\x7A\xBC\xAF\x27\x1C\x00\x00\x00\x00': '7-Zip (7z - Empty)',
    b'\x52\x61\x72\x21': 'RAR (rar - Empty)',
    b'\x50\x4B\x07\x08': 'ZIP (zip - Spanned)',
    b'\x30\x00': 'CPIO (cpio - ASCII)',
    b'\x30\x31\x33\x30\x30': 'CPIO (cpio - Binary)',
    b'\x1A\x52\x54\x42': 'AR (Static Library)',
    b'\x4C\x5A\x49\x50': 'LZIP (lz - Legacy)',
    b'\x01\x00\x00\x00': 'VHD (vhd)',
    b'\x77\x53\x49\x58': 'VHDX (vhdx)',
    b'\x52\x61\x72\x21\x1A\x07\x01\x00': 'RAR (rar - Newer Version)',
    b'\x5A\x4F\x4F\x20': 'ZOO (zoo)',
    b'\x1F\x9D': 'Z (compress - UNIX)',
    b'\x1F\xA0': 'Z (compress - UNIX - Alternate)',
    b'\x53\x51\x76\x41': 'SQSH (sqsh)',
    b'\x1A\x45\xDF\xA3': 'ZPAQ (zpaq)',
    b'\x42\x5A\x68\x39\x31\x41\x59\x26\x53\x59\xF7': 'BZIP2 (bz2 - Old)',
    b'\x53\x74\x75\x66\x66\x49\x54\x20\x20\x20': 'StuffIt (sit)',
    b'\x53\x49\x54\x21': 'StuffIt (sitx)',
    b'\x50\x4B\x03\x14': 'OpenDocument Format (odt, ods, etc.)',
    b'\x4D\x53\x43\x46': 'Microsoft Cabinet (cab - Newer Version)',
    b'\x44\x4D\x53\x21': 'Microsoft Compress (compress - Old)',
    b'\x4C\x4D\x53\x21': 'Microsoft Compress (compress - Newer Version)',
    b'\x53\x4D\x48\x21': 'Microsoft Compress (smh - Old)',
    b'\x4C\x53\x41\x21': 'Microsoft Compress (mscompress - Old)',
    b'\x53\x4D\x48\x2E': 'Microsoft Compress (smh - Newer Version)',
    b'\x49\x53\x63\x28': 'InstallShield (ish)',
    b'\x21\x3C\x61\x72\x63\x68\x3E\x0A': 'ARJ (arj)',
    b'\x2D\x6C\x68': 'LHA (lha)',
    b'\x2E\x68\x67': 'HA (ha)',
    b'\x7F\x45\x4C\x46': 'ELF (Executable and Linkable Format)',
    b'\xCA\xFE\xBA\xBE': 'Mach-O (Mach object)',
    b'\xCE\xFA\xED\xFE': 'Mach-O (Mach object - Swapped)',
    b'\xFE\xED\xFA\xCE': 'Mach-O (Mach object - Big Endian)',
    b'\xFE\xED\xFA\xCF': 'Mach-O (Mach object - Big Endian - Swapped)',
    b'\x00\x61\x73\x6D': 'ASDM (Advanced Systems Development Manager)',
    b'\x4D\x5A\x90\x00\x03\x00\x00\x00\x04\x00\x00\x00\xFF\xFF\x00\x00\xB8': 'Windows Registry Hive (ntuser.dat)',
    b'\x57\x69\x6E\x5A\x69\x70': 'WinZip WZZIP (exe)',
    b'\x41\x4F\x4C\x49': 'AOL (alb)',
    b'\x53\x45\x51\x36\x2E\x32\x2E\x30': 'SQLite (sqlite3)',
    b'\x53\x48\x52\x03': 'SQLite (sqlite)',
    b'\x45\x4C\x46\x02': 'SQLite (sqlite - Legacy)',
    b'\x8A\xDE\x5E\x92': 'SQLite (sqlite - Legacy - Alternate)',
    b'\x53\x51\x4C\x69\x74\x65\x20\x66\x6F\x72\x6D\x61\x74\x20\x33\x00': 'SQLite (sqlite - Legacy - Alternate - Empty)',
    b'\x53\x5A\x44\x44': 'SZDD (szdd)',
    b'\x78\x56\x34\x12\xCD\x34\x56\x78\x41\x61\x5A\x7A\x90\x00\x03\x00\x00\x00\x04\x00\x00\x00\xFF\xFF\x00\x00\xA0': 'Windows Registry Hive (ntuser.dat - Alternate)',
    b'\x2A\x2A\x00\x00\x01\x00\x00\x00\x01': 'UHARC (uha)',
    b'\x75\x73\x74\x61\x72\x20\x20\x20\x00\x00': 'TAR (tar - New POSIX)',
    b'\x75\x73\x74\x61\x72\x20\x20\x00': 'TAR (tar - Old POSIX)',
    b'\x75\x73\x74\x61\x72\x20\x00\x30': 'TAR (tar - Old GNU)',
    b'\x7F\x45\x4C\x46\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00': 'ELF (Executable and Linkable Format - Relocatable)',
    b'\x53\x51\x4C\x69\x74\x65\x20\x66\x6F\x72\x6D\x61\x74\x20\x33\x04': 'SQLite (sqlite - Legacy - Old)',
    b'\x7B\x5C\x72\x74\x66\x31': 'RTF (rtf)',
    b'\x52\x69\x63\x68\x20\x4A\x6F\x6E\x65\x73\x20\x6C\x69\x73\x74\x21': 'SQLite (sqlite - Legacy - Old - Alternate)',
    b'\x42\x41\x44\x5A\x44\x41\x58\x4F\x5E\x4C\x50\x46': 'Bad signature (bad signature)',
    b'\x68\x00': 'StuffIt (sit - Old)',
    b'\xA1\xB2\xC3\xD4': 'PCAP (pcap - Network capture)',
    b'\xD4\xC3\xB2\xA1': 'PCAP (pcap - Swapped)',
    b'\x4D\x5A\x4D\x4D\x58\x4D\x4D\x44\x45\x4D\x46\x43\x58\x45\x4C\x45': 'MZ (DOS/Windows executable)',
    b'\x4D\x5A': 'MZ (DOS/Windows executable - Short)',
    b'\x45\x4C\x46\x01': 'SQLite (sqlite - Legacy - Old - Old)',
    b'\x46\x4C\x49\x46': 'FLIF (flif)',
    b'\x47\x49\x46': 'GIF (gif)',
    b'\x4D\x4D\x00\x2A': 'TIFF (tiff)',
    b'\x4D\x4D\x00\x2B': 'TIFF (tiff - Big Endian)',
    b'\x49\x20\x49': 'TIFF (tiff - Little Endian)',
    b'\x4D\x4D\x00\x2A\x00\x00\x00\x08': 'TIFF (tiff - Legacy - Old)',
    b'\x49\x20\x49\x00\x00\x00\x00\x08': 'TIFF (tiff - Legacy - Old - Alternate)',
    b'\x4D\x4D\x00\x2A\x00\x00\x00\x0C': 'TIFF (tiff - Legacy - Old - Old)',
    b'\x42\x4D': 'BMP (bmp)',
    b'\x49\x43\x4F\x4E': 'ICO (ico)',
    b'\x00\x00\x01\x00': 'ICO (cur)',
    b'\x52\x49\x46\x46': 'WAV (wav)',
    b'\x52\x49\x46\x46\x00\x00\x00\x00\x57\x41\x56\x45\x66\x6D\x74\x20': 'RIFF (avi)',
    b'\x30\x26\xB2\x75\x8E\x66\xCF\x11\xA6\xD9\x00\xAA\x00\x62\xCE\x6C': 'ASF (wmv, wma, etc.)',
    b'\x4F\x67\x67\x53': 'OGG (ogg)',
    b'\x4F\x67\x67\x73': 'OGG (ogv)',
    b'\x66\x74\x79\x70': 'WEBM (webm)',
    b'\x1A\x45\xDF\xA3\x93\x42\x86\x69\x9A\xCB\xA3\x10\x23\x20\x8E\xCC\x6C': 'FLAC (flac)',
    b'\x66\x4C\x61\x43': 'FLAC (flac - Alternate)',
    b'\x52\x49\x46\x46\x5A\x00\x00\x00\x57\x41\x56\x45\x66\x6D\x74\x53': 'RIFF (avs - Video)',
    b'\x52\x49\x46\x46\x61\x00\x00\x00\x57\x41\x56\x45\x66\x6D\x74\x57': 'RIFF (avw - Audio)',
    b'\x66\x4C\x61\x43\x00\x00\x00\x22': 'FLAC (flac - Alternate - Empty)',
    b'\x50\x4B\x03\x08': 'ZIP (zip - Empty - Spanned)',
    b'\x4F\x50\x4C\x4F\x41\x44': 'ODF (odp, odt, etc.)',
    b'\x7B\x5C\x72\x74\x66\x31\x5C': 'RTF (rtf - Legacy)',
    b'\xD0\xCF\x11\xE0\xA1\xB1\x1A\xE1': 'Microsoft Office Document (doc, xls, ppt, etc.)',
}

def detect_archive_type(file_path):
    with open(file_path, 'rb') as file:
        header = file.read(16)
        for signature, archive_type in archive_signatures.items():
            if header.startswith(signature):
                return archive_type
        return "Unknown"

if __name__ == "__main__":
    if len(sys.argv) > 1:
        archive_type = detect_archive_type(sys.argv[1])
        print(f"The archive type is: {archive_type}")
    else:
        print("Invalid parameter!!! You need call: python archive_type_detect.py your_archive_file")
